// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];

    PARTS:

    Inc16(in=prev, out=inPlusOne);

    Mux16(a=false, b=inPlusOne, sel=inc, out=maybeInc);
    Mux16(a=maybeInc, b=in, sel=load, out=maybeLoad);
    Mux16(a=maybeLoad, b=false, sel=reset, out=next);    

    // first attempt, 3 control bits so I used a 4 way mux
    // but hat's overkill when I can do 3 muxes
    // however, I had to ask GPTChat for help with the order because
    // I was trapped in thinking about just 2 muxes
    // load/inc -> reset/hold but I needed 3 muxes
    // one for each bra
    // Mux8Way16(a=in, b=inPlusOne, c=in, d=in, e=false, f=false, g=false, h=false, sel[0]=inc, sel[1]=load, sel[2]=reset, out=next);

    Or(a=load, b=reset, out=load1);
    Or(a=load1, b=inc, out=load2);

    Register(in=next, load=load2, out=out, out=prev);
}
